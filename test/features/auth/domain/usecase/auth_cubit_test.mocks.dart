// Mocks generated by Mockito 5.1.0 from annotations
// in nut_flutter/test/features/auth/domain/usecase/auth_cubit_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:nut_flutter/core/failure/failure.dart' as _i6;
import 'package:nut_flutter/core/usecase/usecase.dart' as _i7;
import 'package:nut_flutter/features/auth/domain/repository/auth_repo.dart'
    as _i2;
import 'package:nut_flutter/features/auth/domain/usecase/check_auth.dart'
    as _i4;
import 'package:nut_flutter/features/auth/domain/usecase/sigin_out.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeAuthRepo_0 extends _i1.Fake implements _i2.AuthRepo {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [CheckAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockCheckAuth extends _i1.Mock implements _i4.CheckAuth {
  MockCheckAuth() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthRepo get authRepo => (super.noSuchMethod(Invocation.getter(#authRepo),
      returnValue: _FakeAuthRepo_0()) as _i2.AuthRepo);
  @override
  _i5.FutureOr<_i3.Either<_i6.Failure, bool>> call(_i7.NoParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
              returnValue: Future<_i3.Either<_i6.Failure, bool>>.value(
                  _FakeEither_1<_i6.Failure, bool>()))
          as _i5.FutureOr<_i3.Either<_i6.Failure, bool>>);
}

/// A class which mocks [SignOut].
///
/// See the documentation for Mockito's code generation for more information.
class MockSignOut extends _i1.Mock implements _i8.SignOut {
  MockSignOut() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthRepo get authRepo => (super.noSuchMethod(Invocation.getter(#authRepo),
      returnValue: _FakeAuthRepo_0()) as _i2.AuthRepo);
  @override
  _i5.FutureOr<_i3.Either<_i6.Failure, bool>> call(_i7.NoParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
              returnValue: Future<_i3.Either<_i6.Failure, bool>>.value(
                  _FakeEither_1<_i6.Failure, bool>()))
          as _i5.FutureOr<_i3.Either<_i6.Failure, bool>>);
}
